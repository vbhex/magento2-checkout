<?php

$author_type_name = ["Unkonw","Buyer","Seller","Voter"];
$order_id = $block->getData('order_id');
$customParameter = $block->getDetail();
$app_id = $customParameter['app_id'] ?? 0;
$voteCoinDecm = $customParameter['vote_coin_decm'] ?? 0;
$entity_id = $customParameter['entity_id'] ?? 0;
$seller_wallet = $customParameter['seller_wallet'] ?? "";
$moda_id = $customParameter['moda_id'] ?? "";
$coin = $customParameter['coin'] ?? "";
$coin_symbol = $customParameter['coin_symbol'] ?? "";
$coin_decm = $customParameter['coin_decm'] ?? 0;
$coin_address = $customParameter['coin_address'] ?? "0x0000000000000000000000000000000000000000";
$order_status = $customParameter['order_status'] ?? 0;
$show_shipping = $customParameter['show_shipping'] ?? "";
$shippingFirstName = $customParameter['shippingFirstName'] ?? "";
$shippingLastName = $customParameter['shippingLastName'] ?? "";
$shippingStreet = $customParameter['shippingStreet'] ?? "";
$shippingCity = $customParameter['shippingCity'] ?? "";
$shippingPostcode = $customParameter['shippingPostcode'] ?? "";
$shippingState_name = $customParameter['shippingState_name'] ?? "";
$shippingCountry_name = $customParameter['shippingCountry_name'] ?? "";
$shippingTelephone = $customParameter['shippingTelephone'] ?? "";
$products = $customParameter['products'] ?? "";
$orderCurrencySymbol = $customParameter['orderCurrencySymbol'] ?? "";
$subTotal = $customParameter['subTotal'] ?? "";
$shippingAmount = $customParameter['shippingAmount'] ?? "";
$taxAmount = $customParameter['taxAmount'] ?? "";
$grandTotal = $customParameter['grandTotal'] ?? "";
$txHash     = $customParameter['tx_hash'] ?? "";
$chainOrderId   =   $customParameter['chain_order_id'] ?? 0;
$totalAmount = $customParameter['totalAmount'] ?? 0;
$paidAmount = $customParameter['paidAmount'] ?? 0;
$pendingAmount = bcsub($totalAmount, $paidAmount, 6);
$coinAmount = bcmul($totalAmount, pow(10, intval($coin_decm)));
//dispute
$voteArr = [
    0   =>  "Not Voted Yet",
    1   =>  "Agree Refund",
    2   =>  "Disagree Refund"
];
$refundAmount = $customParameter['refund'] ?? 0;
$disputeDiscuss = $customParameter['dispute_discuss'] ?? "";
$refundAmountDec = bcdiv($refundAmount, pow(10, intval($coin_decm)), 4);
$modAId = $customParameter['moda_id'] ?? 0;
$modBId = ($customParameter['modb_id']==0)?"Not chosen yet":"#".$customParameter['modb_id'];
$modAVote = $voteArr[$customParameter['moda_vote']];
$modBVote = $voteArr[$customParameter['modb_vote']];
$refundTime = $customParameter['refund_time'] ?? 0;
$disputeHash = $customParameter['dispute_hash'] ?? "No Transaction Yet";
$dispute_status = $customParameter['dispute_status'] ?? 0;
$chain = $this->helper(\Vbhex\Checkout\Helper\Chain::class);
$maxModId = $chain->getMaxModId();
//coin logs
$coinLogs = $customParameter['coinLogs'];
?>
<main id="site-content" role="main">
    <div class="cr-plugin-copy">
        <p>Copied</p>
    </div>
    <article class="post-8 page type-page status-publish hentry" id="post-8">
        <!-- <input type="hidden" id="expire_on"> -->
        <input type="hidden" id="current">
        <input type="hidden" id="imageBase" value="<?php echo $this->getViewFileUrl('Vbhex_Checkout::images'); ?>">
        <div class="post-inner thin ">
            <div class="entry-content">
                <div class="cr-plugin-main-box clearfix">
                    <div class="cr-plugin-left">
                        <div class="cr-plugin-shipping cr-plugin-shadow cr-plugin-mr-top clearfix">
                            <div class="cr-plugin-shipping-address">
                                <h3 class="cr-plugin-title">Mod Information</h3>
                                <p>
                                ModA ID : <b>#<?php echo $modAId; ?> </b> <br>
                                ModB ID  : <b><?php echo $modBId; ?> </b> <br>
                                ModA VOTE : <b><?php echo $modAVote; ?></b> <br>
                                ModB VOTE : <b><?php echo $modBVote; ?> </b>
                                </p>
                            </div>
                            <?php if ($show_shipping) { ?>
                                <div class="cr-plugin-billing-address">
                                    <h3 class="cr-plugin-title">Shipping Address</h3>
                                    <p>
                                        <?php echo $shippingFirstName; ?> <?php echo $shippingLastName; ?> <br>
                                        <?php echo implode(', ', $shippingStreet); ?> <br>
                                        <?php echo $shippingCity; ?> - <?php echo $shippingPostcode; ?> <br>
                                        <?php echo $shippingState_name; ?> <?php echo $shippingCountry_name; ?><br>
                                        <?php echo $shippingTelephone; ?>
                                    </p>
                                </div>
                            <?php } ?>
                        </div>
                        <div class="cr-plugin-cart-summary cr-plugin-shadow cr-plugin-mr-top">
                            <h3 class="cr-plugin-title">Cart Summary</h3>
                            <div class="cr-plugin-cart-table">
                                <div class="cr-plugin-cart-table-box">
                                    <table>
                                        <thead>
                                            <tr>
                                                <th>Product Info</th>
                                                <th style="text-align: center;">Quantity</th>
                                                <th style="text-align: right;">Price</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <?php
                                            if (is_array($products)) {
                                                foreach ($products as $product) {
                                            ?>
                                                    <tr>
                                                        <td style="width: 300px;">
                                                            <div class="cr-plugin-cart-img">
                                                                <img src="<?php echo $product['productImage']; ?>" align="">
                                                            </div>
                                                            <div class="cr-plugin-cart-des">
                                                                <p><?php echo $product['productName']; ?> <?php echo $product['productOptions']; ?></p>
                                                            </div>
                                                        </td>
                                                        <td style="text-align: center;">
                                                            <span><?php echo $product['productQty']; ?></span>
                                                        </td>
                                                        <td style="text-align: right;">
                                                            <span><?php echo $orderCurrencySymbol; ?> <?php echo $product['productPrice']; ?></span>
                                                        </td>
                                                    </tr>
                                            <?php
                                                }
                                            }
                                            ?>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            <div class="cr-plugin-payment-detail">
                                <h3 class="cr-plugin-title">Payment Details</h3>
                                <ul>
                                    <li>Main Contract <span style="size: 15px;word-break: break-word;font-weight:500"><a class="main_contract_link" ></a></span></li>
                                    <li>Seller Wallet <span style="size: 15px;word-break: break-word;font-weight:500"><?php echo $seller_wallet; ?></span></li>
                                    <li>Total <span><?php echo $orderCurrencySymbol; ?> <?php echo $subTotal; ?></span></li>
                                    <li>Shipping Fee <span><?php echo $orderCurrencySymbol; ?> <?php echo $shippingAmount; ?></span></li>
                                    <li>Total Taxes <span><?php echo $orderCurrencySymbol; ?> <?php echo $taxAmount; ?></span></li>
                                </ul>
                                <ul class="cr-plugin-payment-grand">
                                    <li>Grand Total <span><?php echo $orderCurrencySymbol; ?> <?php echo $grandTotal; ?></span></li>
                                </ul>
                            </div>
                        </div>
                        <div class="cr-plugin-billing-main cr-plugin-shadow">
                            <h3 class="cr-plugin-title">Order Coin Logs</h3>
                            <div class="cr-plugin-timer" id="timerStatus"></div>
                            <div class="cr-plugin-billing-box">
                                <div class="cr-plugin-billing-amount">
                                   <?php if($coinLogs): ?>
                                    <table>
                                        <?php foreach($coinLogs as $log): ?>
                                            <tr>
                                            <td><?= $block->simpleAddress($log->getUserWallet()) ?>  </td>
                                            <td><?= $block->escapeHtml($block->getScenariosLabel($log->getScenarios())) ?> </td>
                                            <td><?= /* @noEscape */ $log->getCoinAmount() ." ". $log->getCoinSymbol() ?> </td>
                                            <td><?= /* @noEscape */ $block->escapeHtml($log->getCreatedAt()) ?></p>
                                            </tr>
                                        <?php endforeach ?>
                                    </table>
                                        <br>
                                        <a target="_blank" href="<?= $block->escapeHtml($block->getLogUrl()) ?>">More</a>
                                   <?php else: ?>
                                    No Logs Yet
                                   <?php endif ?>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="cr-plugin-right">
                        <div class="cr-plugin-billing-main cr-plugin-shadow">
                            <h3 class="cr-plugin-title">Billing Details</h3>
                            <div class="cr-plugin-timer" id="timerStatus"></div>
                            <div class="cr-plugin-billing-box">
                                <!-- <div class="cr-plugin-billing-code">
                                 <img class="copyToClipboard" data-copy-detail= title="click to copy" align="">
                              </div> -->
                                <div class="cr-plugin-billing-amount">
                                    <ul>
                                        <li>
                                            <span>Amount : Paid Amount</span>
                                            <p><?php echo $totalAmount; ?> <?php echo $coin_symbol; ?> : <?php echo $paidAmount; ?> <?php echo $coin_symbol; ?></p>
                                            <?php if ($order_status == 0) : ?>
                                                <input class="btn_pay_via_vbhex" type="button" value="Pay Via VBHex" />
                                            <?php elseif (($order_status == 1)&&($dispute_status==0||$dispute_status==1||$dispute_status==5)) : ?>
                                                <input class="btn_confirm_done" type="button" value="Confirm Order Done" />
                                                    <p style="color:red; font-size:12px">(Once confirmed, seller will receive money immediately)</p>
                                            <?php endif ?>
                                        </li>
                                        <li>
                                            <span>Transaction Hash</span>
                                            <?php if ($order_status == 0) : ?>
                                                <p>No Transaction Yet</p>
                                            <?php else : ?>
                                                <p class="copyToClipboard" style="font-size:12px;" title="click to copy" data-copy-detail="<?php echo $txHash; ?>"><a class="tx_hash_link"></a> <img src="<?php echo $this->getViewFileUrl('Vbhex_Checkout::images/copy.png'); ?>"></p>
                                            <?php endif ?>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>

                        <div class="cr-plugin-billing-main cr-plugin-shadow">
                            <h3 class="cr-plugin-title">Dispute</h3>
                            <div class="cr-plugin-timer" id="timerStatus"></div>
                            <div class="cr-plugin-billing-box">
                                <div class="cr-plugin-billing-amount">
                                    <ul>
                                        <li>
                                            <span>Requested Amount : Refund End Time</span>
                                            <p class="refund_amount"><?php echo $refundAmountDec; ?> <?php echo $coin_symbol; ?> : <?php echo date('Y-m-d h:i:s', $refundTime); ?></p>
                                        </li>
                                        <?php if (($dispute_status == 0) && ($order_status == 1)) : ?>
                                            <li>
                                                <input type="number" step="0.00001" placeholder="put refund amount here" style="width:80%;" id="refund_amount" /><?php echo $coin_symbol; ?><br />
                                                <input type="number"  placeholder="choose modB ID between 1 and <?php echo $maxModId; ?>" style="width:80%;" id="modb_id" /><br />
                                                <input style="margin-left:0px" class="btn_ask_refund" type="button" value="Request Refund" />
                                            </li>
                                            <li>
                                                <form action="<?= $block->escapeUrl($block->getUrl('vc/transaction/buyerPost', ["app_order_id" => $order_id, "_secure" => $this->getRequest()->isSecure()])) ?>" enctype="multipart/form-data" method="post" data-role="form-profile-validate" data-mage-init='{"validation":{}}'>
                                                    <textarea id="buyer_reason" name="buyer_reason" placeholder="put buyer reason here" style="width:80%"></textarea><br />
                                                    <input type="hidden" name="app_order_id" value="<?php echo $order_id; ?>" />
                                                    <?= $block->getBlockHtml('formkey') ?>
                                                    <input style="margin-left:0px" type="submit" value="Submit Reason" />
                                                </form>
                                            </li>
                                        <?php elseif (($dispute_status == 1) && ($order_status == 1) ) : ?>
                                            <li>
                                                <input type="number" step="0.00001" placeholder="put refund amount here" style="width:80%;" id="refund_amount" /><?php echo $coin_symbol; ?><br />
                                                <input style="margin-left:0px" class="btn_ask_refund" type="button" value="Request Refund" />
                                                <input style="margin-left:0px" class="btn_cancel_refund" type="button" value="Cancel Refund" />
                                            </li>
                                            <li>
                                                <span>Cash Out</span>
                                                <div class="claim_label"></div>
                                            </li>
                                            <li>
                                                <form action="<?= $block->escapeUrl($block->getUrl('vc/transaction/buyerPost', ["app_order_id" => $order_id, "_secure" => $this->getRequest()->isSecure()])) ?>" enctype="multipart/form-data" method="post" data-role="form-profile-validate" data-mage-init='{"validation":{}}'>
                                                    <textarea id="buyer_reason" name="buyer_reason" placeholder="put buyer reason here" style="width:80%"></textarea><br />
                                                    <input type="hidden" name="app_order_id" value="<?php echo $order_id; ?>" />
                                                    <?= $block->getBlockHtml('formkey') ?>
                                                    <input style="margin-left:0px" type="submit" value="Submit Reason" />
                                                </form>
                                            </li>
                                        <?php elseif ($dispute_status == 3 && $order_status == 2) : ?>
                                            <li>
                                                <span>Status</span>
                                                <p><?php echo __("Seller Agree Refund"); ?></p>
                                            </li>
                                        <?php elseif ($dispute_status == 2 && $order_status == 2) : ?>
                                            <li>
                                                <span>Status</span>
                                                <p><?php echo __("Refund Permitted By Voters"); ?></p>
                                            </li>
                                        <?php elseif ($dispute_status == 5 && $order_status == 1) : ?>
                                            <li>
                                                <span>Status</span>
                                                <p><?php echo __("Refund Refused By Seller"); ?></p>
                                            </li>
                                            <li>
                                            <input style="margin-left:0px" class="btn_cancel_refund" type="button" value="Cancel Refund" />
                                            <p style="color:red; font-size:12px">(You can ask refund after cancellation before refund end time)</p><br/>
                                            <input style="margin-left:0px; background-color: yellow" class="btn_escalate_dispute" type="button" value="Appeal" />
                                            </li>
                                            <li>
                                                <form action="<?= $block->escapeUrl($block->getUrl('vc/transaction/buyerPost', ["app_order_id" => $order_id, "_secure" => $this->getRequest()->isSecure()])) ?>" enctype="multipart/form-data" method="post" data-role="form-profile-validate" data-mage-init='{"validation":{}}'>
                                                    <textarea id="buyer_reason" name="buyer_reason" placeholder="put buyer reason here" style="width:80%"></textarea><br />
                                                    <input type="hidden" name="app_order_id" value="<?php echo $order_id; ?>" />
                                                    <?= $block->getBlockHtml('formkey') ?>
                                                    <input style="margin-left:0px" type="submit" value="Submit Reason" />
                                                </form>
                                            </li>
                                        <?php elseif ($dispute_status == 7 && $order_status == 1) : ?>
                                            <li>
                                                <span>Status</span>
                                                <p><?php echo __("Dispute is Under Appealing"); ?></p>
                                            </li>
                                            <li>
                                                <form action="<?= $block->escapeUrl($block->getUrl('vc/transaction/buyerPost', ["app_order_id" => $order_id, "_secure" => $this->getRequest()->isSecure()])) ?>" enctype="multipart/form-data" method="post" data-role="form-profile-validate" data-mage-init='{"validation":{}}'>
                                                    <textarea id="buyer_reason" name="buyer_reason" placeholder="put buyer reason here" style="width:80%"></textarea><br />
                                                    <input type="hidden" name="app_order_id" value="<?php echo $order_id; ?>" />
                                                    <?= $block->getBlockHtml('formkey') ?>
                                                    <input style="margin-left:0px" type="submit" value="Submit Reason" />
                                                </form>
                                            </li>
                                        <?php elseif ($dispute_status == 4 && $order_status == 2) : ?>
                                            <li>
                                                <span>Status</span>
                                                <p><?php echo __("Refund Denied By Voters"); ?></p>
                                            </li>
                                        <?php elseif (strpos($disputeHash, "x")==1) : ?>
                                            <li>
                                                <span>Dispute Hash</span>
                                                <p class="copyToClipboard" style="font-size:12px;" title="click to copy" data-copy-detail="<?php echo $disputeHash; ?>"><a class="dispute_hash_link"></a> <img src="<?php echo $this->getViewFileUrl('Vbhex_Checkout::images/copy.png'); ?>"></p>
                                            </li>
                                        <?php else : ?>
                                            <li>
                                                <span>Dispute Hash</span>
                                                <p><?php echo $disputeHash; ?></a></p>
                                            </li>
                                        <?php endif ?>
                                        <li>
                                            <span>Dispute Discussion</span>
                                            <?php if(is_array($disputeDiscuss)) : ?>
                                                <?php foreach($disputeDiscuss as $discuss) : ?>
                                                <div>
                                                    <p style="font-size:16px"><?= $author_type_name[$discuss['author_type']]; ?>: </p>
                                                    <span style="font-size:20px"><b><?= $block->escapeHtml($discuss['detail']); ?></b></span>
                                                    <p style="font-size:10px; margin: right 0;"><?= $discuss['created_at']; ?></p>
                                                </div>
                                                <?php endforeach; ?>
                                            <?php endif ?>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- .entry-content -->
        </div>
        <!-- .post-inner -->
    </article>
    <!-- .post -->
</main>
<script type="text/javascript">
    //<![CDATA[[
    require(['jquery', 'web3', 'constvar', 'chainvar'], function($, web3) {
        const ethEnabled = async () => {
            if (window.ethereum) {
                const accounts = await window.ethereum.request({
                    method: 'eth_requestAccounts'
                });

                window.web3 = new web3(window.ethereum);
                if (window.ethereum.networkVersion !== v_chainId) {
                    try {
                        await window.ethereum.request({
                            method: 'wallet_switchEthereumChain',
                            params: [{
                                chainId: web3.utils.toHex(v_chainId)
                            }]
                        });
                    } catch (err) {
                        // This error code indicates that the chain has not been added to MetaMask
                        if (err.code === 4902) {
                            await window.ethereum.request({
                                method: 'wallet_addEthereumChain',
                                params: [{
                                    chainName: v_chainName,
                                    chainId: web3.utils.toHex(v_chainId),
                                    nativeCurrency: {
                                        name: v_currencyName,
                                        decimals: v_decimals,
                                        symbol: v_currencySymbol
                                    },
                                    rpcUrls: [v_rpcUrl],
                                    blockExplorerUrls: [v_explorerUrl]
                                }]
                            });
                        }
                    }
                }
                const theAccount = window.web3.utils.toChecksumAddress(accounts[0]);
                $('.connected_wallet').html("<p>Wallet Address :" + theAccount + "</p>");
                const mainContractAddress = window.web3.utils.toChecksumAddress(v_mainContract);
                const mainContract = new window.web3.eth.Contract(escrowAbiJson, mainContractAddress);
                var seller_wallet = v_defaultSeller;
                if (!web3.utils.isAddress("<?php echo strval($seller_wallet); ?>")){
                        alert("Seller wallet is not correct!");
               } else {
                    seller_wallet = window.web3.utils.toChecksumAddress("<?php echo strval($seller_wallet); ?>");
               }

                var coin_address = window.web3.utils.toChecksumAddress("<?php echo strval($coin_address); ?>");
                var coin_amount = parseInt(<?php echo $coinAmount; ?>);
                var order_id = <?php echo $order_id; ?>;
                var entity_id = <?php echo $entity_id; ?>;
                var max_mod_id = <?php echo $maxModId; ?>;
                var moda_id  = <?php echo $moda_id; ?>;
                var app_id = <?php echo $app_id; ?>;
                var chain_order_id = <?php echo $chainOrderId; ?>;
                //init claim div
                window.web3.eth.getBlockNumber().then(function(bestBlock) {
                    window.web3.eth.getBlock(bestBlock).then(function(theBlock) {
                        var current_timestamp = theBlock.timestamp;
                        mainContract.methods.disputeBook(chain_order_id).call().then(function(dispute_struct) {
                            var expired_timestamp = dispute_struct.refuseExpired;
                            if (window.web3.utils.toBN(current_timestamp).lt(window.web3.utils.toBN(expired_timestamp))) {
                                // can not claim, time countdown
                                timer(expired_timestamp - current_timestamp);
                            } else {
                                // show claim button
                                var button = '<input type="button" style="margin-left:0px" value="Claim" class="btn_claim" />';
                                $('.claim_label').html(button);
                                // cash out
                                $('.btn_claim').click(function() {
                                    claim();
                                });
                            }
                        });
                    });
                });
                $('.btn_pay_via_vbhex').click(function() {
                    //check if the seller wallet correct
                    if (!web3.utils.isAddress("<?php echo strval($seller_wallet); ?>")){
                        alert("Seller wallet is not correct!");
                        return false;
                    }
                    //check the allowrance of the coin contract
                    if (coin_address != "0x0000000000000000000000000000000000000000") {
                        const coinContract = new window.web3.eth.Contract(erc20AbiJson, coin_address);
                        coinContract.methods.allowance(theAccount, mainContractAddress).call().then(function(result) {
                            if (window.web3.utils.toBN(result).lt(window.web3.utils.toBN(coin_amount))) {
                                // approve allowance
                                coinContract.methods.approve(mainContractAddress, 10 * window.web3.utils.toBN(coin_amount)).send({
                                        from: theAccount
                                    })
                                    .then(function(receipt) {
                                        if (receipt.status) {
                                            // create order on blockchain
                                            payOrder(1);
                                        }
                                    });
                            } else {
                                payOrder(1);
                            }
                        });
                    } else {
                        window.web3.eth.getBalance(theAccount).then(function(balance) {
                            if (window.web3.utils.toBN(balance).lt(window.web3.utils.toBN(coin_amount))) {
                                alert("balance is insuffient");
                            } else {
                                payOrder(0);
                            }
                        });
                    }
                });


                $('.btn_confirm_done').click(function(){
                    confirmDone();
                });


                $('.btn_ask_refund').click(function() {
                    askRefund();
                });

                $('.btn_cancel_refund').click(function() {
                    cancelRefund();
                });

                $('.btn_escalate_dispute').click(function() {
                    escalate();
                });

                var payOrder = function(type) {

                    if (type > 0) {
                        // pay via ERC20 coin
                        mainContract.methods.payOrder(app_id, window.web3.utils.toBN(coin_amount), coin_address, seller_wallet, entity_id, moda_id).send({
                            from: theAccount
                        }).then(function(receipt) {
                            console.log(receipt);
                            if (receipt.transactionHash != undefined) {}
                            window.setTimeout(() => {
                                window.location.href = window.location.href;
                            }, 30000);
                        });
                    } else {
                        // pay via ETH
                        mainContract.methods.payOrder(app_id, window.web3.utils.toBN(coin_amount), coin_address, seller_wallet, entity_id, moda_id).send({
                            from: theAccount,
                            value: window.web3.utils.toBN(coin_amount)
                        }).then(function(receipt) {
                            console.log(receipt);
                            if (receipt.transactionHash != undefined) {}
                            window.setTimeout(() => {
                                window.location.href = window.location.href;
                            }, 30000);
                        });
                    }
                }

                var askRefund = function() {

                    var refund_amount = parseFloat($('#refund_amount').val()).toFixed(6);
                    var modb_id =   parseInt($('#modb_id').val());
                    var paid_amount = parseFloat(<?php echo $paidAmount; ?>).toFixed(6);

                    if (modb_id > max_mod_id) {
                        alert('modB ID out of the max ID');
                        return false;
                    }

                    if (refund_amount == "" || refund_amount == "NaN" || typeof(refund_amount) == undefined || refund_amount == null) {
                        alert('Please input refund amount');
                        return false;
                    }

                    if (Math.round(refund_amount * 1000000) > Math.round(paid_amount * 1000000)) {
                        alert('Refund amount can not be over than Paid Amount');
                        return false;
                    }
                    var coin_decm = <?php echo $coin_decm; ?>;
                    var refund_amount_int = parseInt(refund_amount * 1000000);
                    var refund_amount_in_wei = window.web3.utils.toBN(refund_amount_int).mul(window.web3.utils.toBN(10).pow(window.web3.utils.toBN(coin_decm).sub(window.web3.utils.toBN(6))));
                    // ask refund on blockchain
                    mainContract.methods.askRefund(chain_order_id, refund_amount_in_wei, modb_id).send({
                        from: theAccount
                    }).then(function(receipt) {
                        console.log(receipt);
                        window.setTimeout(() => {
                            window.location.href = window.location.href;
                        }, 30000);
                    });
                }

                var confirmDone = function() {
                    // confirm order done by buyer on blockchain
                    mainContract.methods.confirmDone(chain_order_id).send({
                        from: theAccount
                    }).then(function(receipt) {
                        console.log(receipt);
                        window.setTimeout(() => {
                            window.location.href = window.location.href;
                        }, 30000);
                    });
                }

                var escalate = function() {
                    // escalate dispute on blockchain
                    mainContract.methods.escalate(chain_order_id).send({
                        from: theAccount
                    }).then(function(receipt) {
                        console.log(receipt);
                        window.setTimeout(() => {
                            window.location.href = window.location.href;
                        }, 30000);
                    });
                }

                var cancelRefund = function() {
                    // cancel refund on blockchain
                    mainContract.methods.cancelRefund(chain_order_id).send({
                        from: theAccount
                    }).then(function(receipt) {
                        console.log(receipt);
                        window.setTimeout(() => {
                            window.location.href = window.location.href;
                        }, 30000);
                    });
                }

                var claim = function() {
                    // cancel refund on blockchain
                    mainContract.methods.claim(chain_order_id).send({
                        from: theAccount
                    }).then(function(receipt) {
                        console.log(receipt);
                        window.setTimeout(() => {
                            window.location.href = window.location.href;
                        }, 30000);
                    });
                }

                return true;
            }
            alert("Please install MetaMask to use this dApp!");
            return false;
        }

        $('.btn_connect_wallet').click(function() {
            ethEnabled();
        });

        $(document).ready(function() {
            // set main contract address
            $('.main_contract_link').html('<a target="_blank" href="'+v_explorerUrl+'address/'+v_mainContract+'">'+v_mainContract+'</a>');
            // set dispute hash link
            $('.dispute_hash_link').html('<a target="_blank" href="'+v_explorerUrl+'tx/<?php echo $disputeHash; ?>"><?php echo $disputeHash; ?></a>');
            // set tx hash link
            $('.tx_hash_link').html('<a target="_blank" href="'+v_explorerUrl+'tx/<?php echo $txHash; ?>"><?php echo $txHash; ?></a>');
            if (window.ethereum) {
                ethEnabled();
                // refresh page every 30 seconds
                window.setTimeout( function() {
                    window.location.reload();
                }, 30000);
                // detect Metamask account change
                window.ethereum.on('accountsChanged', function(accounts) {
                    console.log('accountsChanges', accounts);
                    window.location.href = window.location.href;
                });

                // detect Network account change
                window.ethereum.on('networkChanged', function(networkId) {
                    console.log('networkChanged', networkId);
                    window.location.href = window.location.href;
                });
            } else {
                alert("Please install MetaMask to use this dApp!");
                $('.btn_claim').click(function() {
                    alert("Please install MetaMask to use this dApp!");
                });

                $('.btn_pay_via_vbhex').click(function() {
                    alert("Please install MetaMask to use this dApp!");
                });

                $('.btn_ask_refund').click(function() {
                    alert("Please install MetaMask to use this dApp!");
                });

                $('.btn_cancel_refund').click(function() {
                    alert("Please install MetaMask to use this dApp!");
                });
            }

        })

        function updateOrder($entity_id, $order_id, $block) {
            $.ajax({
                url: BASE_URL + "rest/V1/vc/update",
                type: "POST",
                data: {
                    id: $entity_id,
                    order_id: $order_id,
                    $block: $block,
                    customer: getCustomerInfo
                }
            }).done(function(data) {
                console.log(data);
            });
        }

        function timer(intDiff) {
            timeInter = window.setInterval(function() {
                var day = 0,
                    hour = 0,
                    minute = 0,
                    second = 0; //æ—¶é—´é»˜è®¤å€¼
                if (intDiff > 0) {
                    day = Math.floor(intDiff / (60 * 60 * 24))
                    hour = Math.floor(intDiff / (60 * 60)) - (day * 24);
                    minute = Math.floor(intDiff / 60) - (day * 24 * 60) - (hour * 60);
                    second = Math.floor(intDiff) - (day * 60 * 60 * 24) - (hour * 60 * 60) - (minute * 60);
                }
                if (hour <= 9) hour = '0' + hour;
                if (minute <= 9) minute = '0' + minute;
                if (second <= 9) second = '0' + second;
                var time = day + ' day(s) ' + hour + ' : ' + minute + ' : ' + second;
                $('.claim_label').html("You can cash out in : <b>" + time + "</b> if seller does not response");
                intDiff--;
            }, 1000);
        }
    });
    // ]]>
</script>
